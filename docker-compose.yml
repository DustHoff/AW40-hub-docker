version: "3.8"

x-restart-policy: &default_restart_policy
  restart: ${DEFAULT_RESTART_POLICY}

services:
  mongo:
    build: ./mongo
    <<: *default_restart_policy
    hostname: "mongo"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_API_USERNAME=${MONGO_API_USERNAME}
      - MONGO_INITDB_API_PASSWORD=${MONGO_API_PASSWORD}
      - MONGO_INITDB_DB=${MONGO_DB}
    networks:
      - hubintranet
      - hubnet
    volumes:
      - mongo-data:/data/db
    ports:
      - 127.0.0.1:27017:27017

  keycloak:
    build:
      context: ./keycloak
      args:
        - KC_VER=20.0
    command: start-dev
    <<: *default_restart_policy
    hostname: "keycloak"
    container_name: keycloak
    depends_on:
      - keycloak-db
    ports:
      - 8080:8080
      - 8443:8443
    environment:
      - KEYCLOAK_ADMIN=${KC_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KC_ADMIN_PASSWORD}
      - KC_HTTP_ENABLED=true #Not allowed in Production
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak-db
      - KC_DB_URL_PORT=5432
      - KC_DB_URL_DATABASE=${KEYCLOAK_DB_DATABASE_NAME}
      - KC_DB_USERNAME=${KEYCLOAK_DB_USER}
      - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
#      - KC_HOSTNAME=127.0.0.1 #Needed in Production
      - KC_HOSTNAME_STRICT=false # Not allowed in Production
      - KC_HOSTNAME_STRICT_HTTPS=false # Not Allowed in Production
      - MINIO_CLIENT_SECRET=${MINIO_CLIENT_SECRET}
      - MINIO_ADMIN_WERKSTATTHUB=${MINIO_ADMIN_WERKSTATTHUB}
      - MINIO_ADMIN_WERKSTATTHUB_PASSWORD=${MINIO_ADMIN_WERKSTATTHUB_PASSWORD}
      - MINIO_USER_WERKSTATTHUB=${MINIO_USER_WERKSTATTHUB}
      - MINIO_USER_WERKSTATTHUB_PASSWORD=${MINIO_USER_WERKSTATTHUB_PASSWORD}
      - KEYCLOAK_HOST_IP_ADDRESS=${KEYCLOAK_HOST_IP_ADDRESS}
    networks:
      - keycloaknet
      - hubintranet
      - hubnet
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 2s
      timeout: 2s
      retries: 15
  keycloak-config:
      image: docker
      command: sh -c "docker exec keycloak sh /opt/keycloak-config.sh"
      volumes:
        - "/var/run/docker.sock:/var/run/docker.sock"
      depends_on:
          keycloak:
              condition: service_healthy
  keycloak-db:
    image: postgres:15-alpine
    <<: *default_restart_policy
    hostname: "keycloak-db"
    environment:
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - POSTGRES_USER=${KEYCLOAK_DB_USER}
      - POSTGRES_DB=${KEYCLOAK_DB_DATABASE_NAME}
    networks:
      - keycloaknet
    volumes:
      - postgres-data:/var/lib/postgresql/data
  minio:
    build:
        context: ./minio
    command: server /data --console-address ":9090"
    <<: *default_restart_policy
    hostname: "minio"
    ports:
      - 9000:9000
      - 9090:9090
    depends_on:
          keycloak-config:
              condition: service_completed_successfully
    environment:
      - MINIO_ROOT_USER=${S3_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${S3_ROOT_PASSWORD}
      - MINIO_IDENTITY_OPENID_CONFIG_URL=http://${KEYCLOAK_HOST_IP_ADDRESS}:8080/realms/werkstatt-hub/.well-known/openid-configuration
      - MINIO_IDENTITY_OPENID_CLIENT_ID=minio
      - MINIO_IDENTITY_OPENID_CLIENT_SECRET=${MINIO_CLIENT_SECRET}
      - MINIO_IDENTITY_OPENID_SCOPES=minio-policy-scope,profile,email
      - MINIO_IDENTITY_OPENID_REDIRECT_URI=http://${KEYCLOAK_HOST_IP_ADDRESS}:9090/oauth_callback
      - MINIO_IDENTITY_OPENID_CLAIM_NAME=policy
      - MINIO_IDENTITY_OPENID_ENABLE=on
    networks:
      - hubintranet
      - hubnet
    volumes:
      - minio-data:/data
    healthcheck:
        test: [ "CMD", "curl", "-f", "http://localhost:9000" ]
        interval: 2s
        timeout: 2s
        retries: 15
  minio-config:
      image: minio/mc
      depends_on:
          minio:
              condition: service_started
      entrypoint: [./minio-config.sh]
      volumes:
        - ./minio/minio-config.sh:/minio-config.sh
      environment:
          - KEYCLOAK_HOST_IP_ADDRESS=${KEYCLOAK_HOST_IP_ADDRESS}
          - S3_ROOT_USER=${S3_ROOT_USER}
          - S3_ROOT_PASSWORD=${S3_ROOT_PASSWORD}
  api:
    build:
      context: ./api
    <<: *default_restart_policy
    hostname: "api"
    depends_on:
      - mongo
    ports:
      - 8000:8000
    networks:
      - hubintranet
      - hubnet
    environment:
      - MONGO_HOST=mongo
      - MONGO_USERNAME=${MONGO_API_USERNAME}
      - MONGO_PASSWORD=${MONGO_API_PASSWORD}
      - MONGO_DB=${MONGO_DB}

    # DEVELOPMENT: run with reload and mount api package code
    command: uvicorn --host 0.0.0.0 --reload api.main:app
    volumes:
      - ./api/api/:/home/api/api/

networks:
  hubnet:
  hubintranet:
    internal: true
  keycloaknet:
    internal: true

volumes:
  mongo-data:
  postgres-data:
  minio-data:
